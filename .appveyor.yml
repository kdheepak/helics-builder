version: '{build}'

branches:
  only:
  - master

image:
- Visual Studio 2017

configuration:
- Release

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 15 2017
      platform: x64
      GENERATOR: Visual Studio 15 201
      # PYTHON: "C:\\Python27.10-x64"
      # PYTHON_VERSION: "2.7.10"
      # PYTHON_ARCH: "64"
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 15 2017
      platform: Win32
      GENERATOR: Visual Studio 15 2017
      # PYTHON: "C:\\Python27.10"
      # PYTHON_VERSION: "2.7.10"
      # PYTHON_ARCH: "32"

matrix:
  fast_finish: true

# skip unsupported combinations
init:
  - echo %APPVEYOR_BUILD_WORKER_IMAGE%
  - echo %GENERATOR%

install:
  # Install Python (from the official .msi of https://python.org) and pip when not already installed.
  # - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }
  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - set PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%

  # Check that we have the expected version and architecture for Python
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - python -m pip install --upgrade pip
  # Install ninja
  - mkdir C:\ninja
  - appveyor DownloadFile https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip -FileName ninja.zip
  - 7z x ninja.zip -oC:\ninja > nul
  - set PATH=C:\ninja;%PATH%


before_build:
  - set Platform=
  - cmd: |-
      git clone --branch v2.1.1 https://github.com/GMLC-TDC/HELICS
      cd HELICS
      mkdir build
      cd build
      cmake --version
      cmake .. -G "%GENERATOR%" -A%platform% -DBOOST_ROOT=C:\Libraries\boost_1_67_0 -DENABLE_PACKAGE_BUILD=ON -DBUILD_RELEASE_ONLY=ON -DBUILD_C_SHARED_LIB=ON -DBUILD_SHARED_LIBS=ON -DBUILD_PYTHON_INTERFACE=ON -DENABLE_SWIG=OFF -DCMAKE_BUILD_TYPE=Release
      cmake --build . --config Release --target install

build:
  project: HELICS/build/HELICS.sln
  parallel: true
  verbosity: minimal

after_build:
  - cd HELICS/build
  - cpack -B %cd%/installer-output

artifacts:
  - path: build/installer-output/Helics-*.exe

